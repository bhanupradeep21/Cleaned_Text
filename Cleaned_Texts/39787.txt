grammatical evolution ge evolutionary computation specifically genetic programming gp technique approach pioneered conor ryan jj collins michael oneill bds group university limerick gp approach objective find executable program program fragment function achieve good fitness value given objective function published work gp lispstyle treestructured expression directly manipulated whereas ge applies genetic operators integer string subsequently mapped program similar use grammar typically expressed form one benefits ge mapping simplifies application search different programming languages structures typefree conventional kozastyle gp function set must meet requirement closure functions must capable accepting arguments output functions function set usually implemented dealing single datatype doubleprecision floating point modern genetic programming frameworks support typing typesystems limitations grammatical evolution suffer ge offers solution singletype limitation evolving solutions according userspecified grammar usually grammar backusnaur form therefore search space restricted domain knowledge problem incorporated inspiration approach comes desire separate genotype phenotype gp objects search algorithm operates fitness evaluation function interprets one contrast ges genotypes ordered lists integers code selecting rules provided contextfree grammar phenotype however kozastyle gp treelike structure evaluated recursively model line genetics work nature separation organisms genotype final expression phenotype proteins etc separating genotype phenotype allows modular approach particular search portion ge paradigm neednt carried one particular algorithm method observe objects ge performs search used genetic algorithms means principle existing genetic algorithm package popular galib used carry search developer implementing ge system need worry carrying mapping list integers program tree also principle possible perform search using method particle swarm optimization see remark modular nature ge creates many opportunities hybrids problem interest solved dictates brabazon oneill successfully applied ge predicting corporate bankruptcy forecasting stock indices bond credit ratings financial applicationscitation needed ge also used classic predatorprey model explore impact parameters predator efficiency niche number random mutations ecological possible structure ge grammar given functionterminal set equivalent genetic programming despite successes ge subject criticism one issue result mapping operation ges genetic operators achieve high highly regarded property genetic operators evolutionary although ge originally described terms using evolutionary algorithm specifically genetic algorithm variants exist example ge researchers experimented using particle swarm optimization carry searching instead genetic algorithms results comparable normal ge referred grammatical swarm using basic pso model found pso probably equally capable carrying search process ge simple genetic algorithms although pso normally floatingpoint search paradigm discretized eg simply rounding vector nearest integer use ge yet another possible variation experimented literature attempting encode semantic information grammar order bias search process work showed biased grammars leverage domain knowledge even random search used drive ge originally combination linear representation used genetic algorithm developing software gadscitation needed backus naur form grammars originally used treebased gp wong whigham related work noted original ge paper frederic used conceptually similar embryonic approach well keller similarly used linear genomes several implementations ge include following httpsenwikipediaorgwikigrammaticalevolution