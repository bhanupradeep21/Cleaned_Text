antipattern software engineering project management business processes common response recurring problem usually ineffective risks highly term coined computer programmer andrew koenig inspired book design patterns highlights number design patterns software development authors considered highly reliable effective first published article journal objectoriented paper presented michael ackroyd object world west conference also documented however book antipatterns popularized idea extended scope beyond field software design include software architecture project authors extended since encompass environmentalorganizationalcultural according authors design patterns two key elements antipattern distinguish bad habit bad practice bad idea guide commonly used ruleofthree similar patterns antipattern must witnessed occurring least three documenting antipatterns effective way analyze problem space capture expert antipattern descriptions merely document adverse consequences pattern good antipattern documentation also provides alternative means ameliorate software engineering antipatterns include big ball mud lack design god class single class handles control program rather control distributed across multiple classes magic numbers unique value unexplained meaning multiple occurrences could replaced named constant poltergeists ephemeral controller classes exist invoke methods indicates software system lacks perceivable architecture although undesirable software engineering point view systems common practice due business pressures developer turnover code entropy term popularized brian foote joseph yoders paper name defines term big ball mud haphazardly structured sprawling sloppy ducttapeandbalingwire spaghetticode jungle systems show unmistakable signs unregulated growth repeated expedient repair information shared promiscuously among distant elements system often point nearly important information becomes global duplicated overall structure system may never well defined may eroded beyond recognition programmers shred architectural sensibility shun quagmires unconcerned architecture perhaps comfortable inertia daytoday chore patching holes failing dikes content work systems foote yoder credited brian marick originator big ball mud term sort project management antipatterns included antipatterns book include blowhard jamboree excess industry pundits analysis paralysis viewgraph engineering much time spent making presentations enough actual software death planning similarly much planning fear success irrational fears near project completion corncob difficulties people intellectual violence intimidation use jargon arcane technology irrational management bad management habits smoke mirrors excessive use demos prototypes salespeople throw wall forcing fad software engineering practices onto developers without buyin fire drill long periods monotony punctuated short crises feud conflicts managers email dangerous situations resulting illadvised email httpsenwikipediaorgwikiantipattern