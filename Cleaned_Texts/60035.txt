algorithm performs local sequence alignment determining similar regions two strings nucleic acid sequences protein sequences instead looking entire sequence algorithm compares segments possible lengths optimizes similarity measure algorithm first proposed temple f smith michael waterman like algorithm variation dynamic programming algorithm desirable property guaranteed find optimal local alignment respect scoring system used includes substitution matrix gapscoring scheme main difference algorithm negative scoring matrix cells set zero renders thus positively scoring local alignments traceback procedure starts highest scoring matrix cell proceeds cell score zero encountered yielding highest scoring local alignment cubic time complexity often practically applied largescale problems replaced favor computationally efficient alternatives gotoh altschul erickson myers miller saul b needleman christian wunsch proposed heuristic homology algorithm sequence alignment also referred global alignment algorithm requires n displaystyle omn calculation steps displaystyle n displaystyle n lengths two sequences aligned uses iterative calculation matrix purpose showing global alignment following decade others formulated alternative heuristic algorithms analyzing gene sequences sellers introduced system measuring sequence waterman et al added concept gaps original measurement smith waterman published algorithm calculating local alignment algorithm fairly demanding time align two sequences lengths displaystyle n displaystyle n n displaystyle time required optimized algorithm n displaystyle omn steps space complexity optimized myers n displaystyle omn n displaystyle linear n displaystyle n length shorter sequence case one many possible optimal alignments desired chowdhury le later optimized cache performance algorithm keeping space usage linear total length input sequences recent years genome projects conducted variety organisms generated massive amounts sequence data genes proteins requires computational analysis sequence alignment shows relations genes proteins leading better understanding homology functionality sequence alignment also reveal conserved domains motifs one motivation local alignment difficulty obtaining correct alignments regions low similarity distantly related biological sequences mutations added much noise evolutionary time allow meaningful comparison regions local alignment avoids regions altogether focuses positive score ie evolutionarily conserved signal similarity prerequisite local alignment negative expectation score expectation score defined average score scoring system substitution matrix gap penalties would yield random sequence another motivation using local alignments reliable statistical model developed karlin altschul optimal local alignments alignment unrelated sequences tends produce optimal local alignment scores follow extreme value distribution property allows programs produce expectation value optimal local alignment two sequences measure often two unrelated sequences would produce optimal local alignment whose score greater equal observed score low expectation values indicate two sequences question might homologous meaning might share common ancestor let n displaystyle b b b b displaystyle sequences aligned n displaystyle n displaystyle lengths displaystyle b displaystyle b respectively algorithm aligns two sequences matchesmismatches also known substitutions insertions deletions insertions deletions operations introduce gaps represented dashes algorithm several steps algorithm finds segments two sequences similarities algorithm aligns two complete sequences therefore serve different purposes algorithms use concepts substitution matrix gap penalty function scoring matrix traceback process three main differences one important distinctions negative score assigned scoring system algorithm enables local alignment element score lower zero means sequences position similarities element set zero eliminate influence previous alignment way calculation continue find alignment position afterwards initial scoring matrix algorithm enables alignment segment one sequence arbitrary position sequence algorithm however end gap penalty also needs considered order align full sequences base substitution amino acid substitution assigned score general matches assigned positive scores mismatches assigned relatively lower scores take dna sequence example matches get mismatches get substitution matrix substitution matrix described b j b j b j displaystyle aineq bjendcases different base substitutions amino acid substitutions different scores substitution matrix amino acids usually complicated bases see pam blosum gap penalty designates scores insertion deletion simple gap penalty strategy use fixed score gap biology however score needs counted differently practical reasons one hand partial similarity two sequences common phenomenon hand single gene mutation event result insertion single long gap therefore connected gaps forming long gap usually favored multiple scattered short gaps order take difference consideration concepts gap opening gap extension added scoring system gap opening score usually higher gap extension score instance default parameters emboss water gap opening gap extension discuss two common strategies gap penalty see gap penalty strategies let w k displaystyle wk gap penalty function gap length k displaystyle k linear gap penalty scores opening extending gap w k k w displaystyle w displaystyle cost single gap gap penalty directly proportional gap length linear gap penalty used algorithm simplified h j max h j b j h j w h j w displaystyle hijmax simplified algorithm uses n displaystyle omn steps element scored gap penalties elements directly adjacent element need considered affine gap penalty considers gap opening extension separately w k u k v u v displaystyle wkukvquad v displaystyle v gap opening penalty u displaystyle u gap extension penalty example penalty gap length u v displaystyle arbitrary gap penalty used original algorithm paper uses n displaystyle steps therefore quite demanding time gotoh optimized steps affine gap penalty n displaystyle omn optimized algorithm attempts find one optimal alignment optimal alignment guaranteed altschul modified gotohs algorithm find optimal alignments maintaining computational later myers miller pointed gotoh altschuls algorithm modified based method published hirschberg applied myers millers algorithm align two sequences using n displaystyle space n displaystyle n length shorter sequence chowdhury le later showed run gotohs algorithm cacheefficiently linear space using different recursive divideandconquer strategy one used hirschberg resulting algorithm runs faster myers millers algorithm practice due superior cache take alignment sequences tacgggcccgctac tagccctatcggtca example linear gap penalty function used result alignments performed emboss water substitution matrix dnafull similarity score matching characters otherwise gap opening extension respectively affine gap penalty used result gap opening extension respectively example shows affine gap penalty help avoid scattered small gaps function scoring matrix conduct onetoone comparisons components two sequences record optimal alignment results scoring process reflects concept dynamic programming final optimal alignment found iteratively expanding growing optimal alignment words current optimal alignment generated deciding path matchmismatch inserting gap gives highest score previous optimal alignment size matrix length one sequence plus length sequence plus additional first row first column serve purpose aligning one sequence positions sequence first line first column set end gap penalized initial scoring matrix take alignment dna sequences tgttacgg ggttgacta example use following scheme initialize fill scoring matrix shown figure shows scoring process first three elements yellow color indicates bases considered red color indicates highest possible score cell scored finished scoring matrix shown left blue color shows highest score element receive score one element form different path element traced back case multiple highest scores traceback done starting highest score traceback process shown right best local alignment generated reverse direction alignment result implementation algorithm ssearch available fasta sequence analysis package uva fasta downloads implementation includes altivec accelerated code powerpc processors speeds comparisons using modification wozniak vectorization developed making optimal protein sequence database searches quite practical library ssw extends farrars implementation return alignment information addition optimal cray demonstrated acceleration algorithm using reconfigurable computing platform based fpga chips results showing speedup standard microprocessorbased solutions another fpgabased version algorithm shows fpga speedups ghz opteron timelogic decypher codequest systems also accelerate framesearch using pcie fpga cards masters thesis includes analysis fpgabased acceleration publication opencl code compiled xilinx sdaccel accelerates genome sequencing beats cpugpu performancew efficient implementation presented using one pcie fpga card equipped xilinx fpga performance per watt level better cpugpu lawrence livermore national laboratory united states us department energys joint genome institute implemented accelerated version local sequence alignment searches using graphics processing units gpus preliminary results showing speedup software similar method already implemented biofacet software since speedup several gpu implementations algorithm nvidias cuda c platform also compared best known cpu implementation using simd instructions architecture farrar performance tests solution using single nvidia geforce gtx card show slight increase performance smaller sequences slight decrease performance larger ones however tests running dual nvidia geforce gtx cards almost twice fast farrar implementation sequence sizes tested newer gpu cuda implementation sw available faster previous versions also removes limitations query lengths see cudasw eleven different sw implementations cuda reported three report speedups fast implementation algorithm using single instruction multiple data simd technology available intel pentium mmx processors similar technology described publication rognes contrast wozniak approach new implementation based vectors parallel query sequence diagonal vectors company sencel bioinformatics applied patent covering approach sencel developing software provides executables academic use free charge vectorization algorithm farrar available providing speedup intelamd processors running intel processor using core microarchitecture implementation achieves increase farrars implementation available ssearch program fasta sequence comparison package ssearch included european bioinformatics institutes suite similarity searching programs danish bioinformatics company clc bio achieved speedups close standard software implementations intel ghz core duo cpu according publicly available white paper accelerated version algorithm intel advanced micro devices amd based linux servers supported gencore package offered biocceleration performance benchmarks software package show fold speed acceleration relative standard software implementation processor currently company bioinformatics offer sse fpga solutions accelerating clc bio achieved speedups standard software implementations clc bioinformatics cubecitation needed fastest implementation algorithm cpus found swipe software rognes available gnu affero general public license parallel software compares residues sixteen different database sequences one query residue using residue query sequence speed billion cell updates per second gcups achieved dual intel xeon sixcore processor system six times rapid software based farrars striped approach faster blast using matrix implementation named diagonalsw c c uses simd instruction sets platform altivec powerpc platform released opensource mit license described port striped cell broadband engine reported speeds gcups ibm blade sony playstation respectively fast expansion genetic data challenges speed current dna sequence alignment algorithms essential needs efficient accurate method dna variant discovery demand innovative approaches parallel processing real time optical computing approaches suggested promising alternatives current electrical implementations optcam example