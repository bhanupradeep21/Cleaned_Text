homomorphic encryption form encryption allows computations performed encrypted data without first decrypt resulting computations left encrypted form decrypted result output identical produced operations performed unencrypted data homomorphic encryption used privacypreserving outsourced storage computation allows data encrypted outsourced commercial cloud environments processing encrypted homomorphic encryption eliminates need processing data clear thereby preventing attacks would enable hacker access data processed using privilege sensitive data health care information homomorphic encryption used enable new services removing privacy barriers inhibiting data sharing increasing security existing services example predictive analytics health care hard apply via third party service provider due medical data privacy concerns predictive analytics service provider operate encrypted data instead privacy concerns diminished moreover even service providers system compromised data would remain homomorphic encryption form encryption additional evaluation capability computing encrypted data without access secret key result computation remains encrypted homomorphic encryption viewed extension publickey cryptographyhow homomorphic refers homomorphism algebra encryption decryption functions thought homomorphisms plaintext ciphertext spaces homomorphic encryption includes multiple types encryption schemes perform different classes computations encrypted computations represented either boolean arithmetic circuits common types homomorphic encryption partially homomorphic somewhat homomorphic leveled fully homomorphic fully homomorphic encryption majority homomorphic encryption schemes multiplicative depth circuits main practical limitation performing computations encrypted data homomorphic encryption schemes inherently malleable terms malleability homomorphic encryption schemes weaker security properties nonhomomorphic schemes homomorphic encryption schemes developed using different approaches specifically fully homomorphic encryption schemes often grouped generations corresponding underlying problem constructing fully homomorphic encryption scheme first proposed within year publishing rsa years unclear whether solution existed period partial results included following schemes craig gentry using latticebased cryptography described first plausible construction fully homomorphic encryption scheme gentrys scheme supports addition multiplication operations ciphertexts possible construct circuits performing arbitrary computation construction starts somewhat homomorphic encryption scheme limited evaluating lowdegree polynomials encrypted data limited ciphertext noisy sense noise grows one adds multiplies ciphertexts ultimately noise makes resulting ciphertext indecipherable gentry shows slightly modify scheme make bootstrappable ie capable evaluating decryption circuit least one operation finally shows bootstrappable somewhat homomorphic encryption scheme converted fully homomorphic encryption recursive selfembedding gentrys noisy scheme bootstrapping procedure effectively refreshes ciphertext applying decryption procedure homomorphically thereby obtaining new ciphertext encrypts value lower noise refreshing ciphertext periodically whenever noise grows large possible compute arbitrary number additions multiplications without increasing noise much gentry based security scheme assumed hardness two problems certain worstcase problems ideal lattices sparse lowweight subset sum problem gentrys phd provides additional details gentryhalevi implementation gentrys original cryptosystem reported timing minutes per basic bit extensive design implementation work subsequent years improved upon early implementations many orders magnitude runtime performance marten van dijk craig gentry shai halevi vinod vaikuntanathan presented second fully homomorphic encryption uses many tools gentrys construction require ideal lattices instead show somewhat homomorphic component gentrys ideal latticebased scheme replaced simple somewhat homomorphic scheme uses integers scheme therefore conceptually simpler gentrys ideal lattice scheme similar properties regards homomorphic operations efficiency somewhat homomorphic component work van dijk et al similar encryption scheme proposed levieil naccache also one proposed bram cohen cohens method even additively homomorphic however scheme supports additions modified also support small number multiplications many refinements optimizations scheme van dijk et al proposed sequence works jeansébastien coron tancrède lepoint avradip mandal david naccache mehdi works included also implementations resulting schemes homomorphic cryptosystems generation derived techniques developed starting zvika brakerski craig gentry vinod vaikuntanathan others innovations led development much efficient somewhat fully homomorphic cryptosystems include security schemes based hardness ring learning errors rlwe problem except ltv blln schemes rely variant ntru computational problem ntru variant subsequently shown vulnerable subfield lattice two schemes longer used practice secondgeneration cryptosystems still follow basic blueprint gentrys original construction namely first construct somewhat homomorphic cryptosystem convert fully homomorphic cryptosystem using bootstrapping distinguishing characteristic secondgeneration cryptosystems feature much slower growth noise homomorphic computations additional optimizations craig gentry shai halevi nigel smart resulted cryptosystems nearly optimal asymptotic complexity performing displaystyle operations data encrypted security parameter k displaystyle k complexity p l l g k displaystyle tcdot mathrm polylog k optimizations build smartvercauteren techniques enable packing many plaintext values single ciphertext operating plaintext values simd many advances secondgeneration cryptosystems also ported cryptosystem another distinguishing feature secondgeneration schemes efficient enough many applications even without invoking bootstrapping instead operating leveled fhe mode craig gentry amit sahai brent waters gsw proposed new technique building fhe schemes avoids expensive relinearization step homomorphic zvika brakerski vinod vaikuntanathan observed certain types circuits gsw cryptosystem features even slower growth rate noise hence better efficiency stronger jacob alperinsheriff chris peikert described efficient bootstrapping technique based techniques improved develop efficient ring variants gsw cryptosystem fhew tfhe fhew scheme first show refreshing ciphertexts every single operation possible reduce bootstrapping time fraction second fhew introduced new method compute boolean gates encrypted data greatly simplifies bootstrapping implemented variant bootstrapping efficiency fhew improved tfhe scheme implements ring variant bootstrapping using method similar one fhew cheon kim kim song proposed approximate homomorphic encryption scheme supports special kind fixedpoint arithmetic commonly referred block floating point arithmetic ckks scheme includes efficient rescaling operation scales encrypted message multiplication comparison rescaling requires bootstrapping bgv bfv schemes rescaling operation makes ckks scheme efficient method evaluating polynomial approximations preferred approach implementing privacypreserving machine learning applications scheme introduces several approximation errors nondeterministic deterministic require special handling article baiyu li daniele micciancio discusses passive attacks ckks suggesting standard indcpa definition may sufficient scenarios decryption results authors apply attack four modern homomorphic encryption libraries heaan seal helib palisade report possible recover secret key decryption results several parameter configurations authors also propose mitigation strategies attacks include responsible disclosure paper suggesting homomorphic encryption libraries already implemented mitigations attacks article became publicly available information mitigation strategies implemented homomorphic encryption libraries also following examples notation e x displaystyle mathcal ex used denote encryption message x displaystyle x unpadded rsa rsa public key modulus n displaystyle n encryption exponent e displaystyle e encryption message displaystyle given e e mod n displaystyle mathcal emmebmod n homomorphic property elgamal elgamal cryptosystem cyclic group g displaystyle g order q displaystyle q generator g displaystyle g public key g q g h displaystyle gqgh h g x displaystyle hgx x displaystyle x secret key encryption message displaystyle e g r h r displaystyle mathcal emgrmcdot hr random r q displaystyle rin homomorphic property cryptosystem public key modulus n displaystyle n quadratic nonresidue x displaystyle x encryption bit b displaystyle b e b x b r mod n displaystyle mathcal n random r n displaystyle rin homomorphic property displaystyle oplus denotes addition modulo ie exclusiveor benaloh benaloh cryptosystem public key modulus n displaystyle n base g displaystyle g blocksize c displaystyle c encryption message displaystyle e g r c mod n displaystyle mathcal emgmrcbmod n random r n displaystyle rin homomorphic property paillier paillier cryptosystem public key modulus n displaystyle n base g displaystyle g encryption message displaystyle e g r n mod n displaystyle mathcal emgmrnbmod random r n displaystyle rin homomorphic property partially homomorphic cryptosystems cryptosystem supports arbitrary computation ciphertexts known fully homomorphic encryption fhe scheme enables construction programs desirable functionality run encrypted inputs produce encryption result since program need never decrypt inputs run untrusted party without revealing inputs internal state fully homomorphic cryptosystems great practical implications outsourcing private computations instance context cloud list opensource fhe libraries implementing secondgeneration bgvbfv thirdgeneration fhewtfhe andor fourthgeneration ckks fhe schemes provided several opensource implementations fully homomorphic encryption schemes secondgeneration fourthgeneration fhe scheme implementations typically operate leveled fhe mode though bootstrapping still available libraries support efficient simdlike packing data typically used compute encrypted integers realcomplex numbers thirdgeneration fhe scheme implementations often bootstrap operation limited support packing initially used compute boolean circuits encrypted bits extended support integer arithmetics univariate function evaluation choice using secondgeneration vs thirdgeneration vs fourthgeneration scheme depends input data types desired computation rust implementation tfheextended supporting boolean integer operation univariate function evaluation via programmable tfheextended compiler python researchers ibm microsoft intel nist others formed open consortium homomorphic encryption standardization consortium homomorphicencryptionorg maintains community security homomorphic encryption standard httpsenwikipediaorgwikihomomorphicencryption