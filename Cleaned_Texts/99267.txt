industrial design field interaction user interface ui space interactions humans machines occur goal interaction allow effective operation control machine human end machine simultaneously feeds back information aids operators decisionmaking process examples broad concept user interfaces include interactive aspects computer operating systems hand tools heavy machinery operator controls process controls design considerations applicable creating user interfaces related involve disciplines ergonomics psychology generally goal user interface design produce user interface makes easy efficient enjoyable userfriendly operate machine way produces desired result ie maximum usability generally means operator needs provide minimal input achieve desired output also machine minimizes undesired outputs user user interfaces composed one layers including humanmachine interface hmi typically interfaces machines physical input hardware keyboards mice game pads output hardware computer monitors speakers printers device implements hmi called human interface device hid user interfaces dispense physical movement body parts intermediary step brain machine use input output devices except electrodes alone called interfaces bcis interfaces bmis terms interfaces interface mmi machine question computer interface additional ui layers may interact one human senses including tactile ui touch visual ui sight auditory ui sound olfactory ui smell equilibria ui balance gustatory ui taste composite user interfaces cuis uis interact two senses common cui graphical user interface gui composed tactile ui visual ui capable displaying graphics sound added gui becomes multimedia user interface mui three broad categories cui standard virtual augmented standard cui use standard human interface devices like keyboards mice computer monitors cui blocks real world create virtual reality cui virtual uses virtual reality interface cui block real world creates augmented reality cui augmented uses augmented reality interface ui interacts human senses called qualia interface named theory qualiacitation needed cui may also classified many senses interact either xsense virtual reality interface xsense augmented reality interface x number senses interfaced example smellovision standard cui visual display sound smells virtual reality interfaces interface smells touch said virtual reality interface augmented reality interfaces interface smells touch said augmented reality interface user interface interface part machine handles interaction membrane switches rubber keypads touchscreens examples physical part human machine interface see touch complex systems interface typically computerized term interface refers kind system context computing term typically extends well software dedicated control physical elements used interaction engineering interfaces enhanced considering ergonomics human factors corresponding disciplines human factors engineering hfe usability engineering ue part systems engineering tools used incorporating human factors interface design developed based knowledge computer science computer graphics operating systems programming languages nowadays use expression graphical user interface interface computers nearly using graphicscitation needed multimodal interfaces allow users interact using one modality user difference user interface operator interface interface hmi science fiction hmi sometimes used refer better described direct neural interface however latter usage seeing increasing application reallife use medical artificial extension replaces missing body part eg cochlear circumstances computers might observe user react according actions without specific commands means tracking parts body required sensors noting position head direction gaze used experimentally particularly relevant immersive history user interfaces divided following phases according dominant type user interface batch era computing power extremely scarce expensive user interfaces rudimentary users accommodate computers rather way around user interfaces considered overhead software designed keep processor maximum utilization little overhead possible input side user interfaces batch machines mainly punched cards equivalent media like paper tape output side added line printers media limited exception system operators console human beings interact batch machines real time submitting job batch machine involved first preparing deck punched cards describing program dataset punching program cards wasnt done computer keypunches specialized typewriterlike machines notoriously bulky unforgiving prone mechanical failure software interface similarly unforgiving strict syntaxes meant parsed smallest possible compilers interpreters cards punched one would drop job queue wait eventually operators would feed deck computer perhaps mounting magnetic tapes supply another dataset helper software job would generate printout containing final results abort notice attached error log successful runs might also write result magnetic tape generate data cards used later computation turnaround time single job often spanned entire days one lucky might hours realtime response worse fates card queue computers required even tedious errorprone process toggling programs binary code using console switches earliest machines partly rewired incorporate program logic using devices known plugboards early batch systems gave currently running job entire computer program decks tapes include would think operating system code talk io devices whatever housekeeping needed midway batch period various groups began experiment socalled loadandgo systems used monitor program always resident computer programs could call monitor services another function monitor better error checking submitted jobs catching errors earlier intelligently generating useful feedback users thus monitors represented first step towards operating systems explicitly designed user interfaces commandline interfaces clis evolved batch monitors connected system console interaction model series requestresponse transactions requests expressed textual commands specialized vocabulary latency far lower batch systems dropping days hours seconds accordingly commandline systems allowed user change mind later stages transaction response realtime nearrealtime feedback earlier results software could exploratory interactive ways possible interfaces still placed relatively heavy mnemonic load user requiring serious investment effort learning time earliest commandline systems combined teleprinters computers adapting mature technology proven effective mediating transfer information wires human beings teleprinters originally invented devices automatic telegraph transmission reception history going back already become wellestablished newsrooms elsewhere reusing economy certainly consideration psychology rule least surprise mattered well teleprinters provided point interface system familiar many engineers users widespread adoption videodisplay terminals vdts ushered second phase commandline systems cut latency characters could thrown phosphor dots screen quickly printer head carriage move helped quell conservative resistance interactive programming cutting ink paper consumables cost picture first tv generation late even iconic comfortable teleprinters computer pioneers importantly existence accessible screen twodimensional display text could rapidly reversibly modified made economical software designers deploy interfaces could described visual rather textual pioneering applications kind computer games text editors close descendants earliest specimens still live part unix tradition beginning microsoft windows graphical user interfaces ibm created called systems application architecture saa standard include common user access cua derivative cua successfully created know use today windows recent dos windows console applications use standard well defined pulldown menu system top screen status bar bottom shortcut keys stay common functionality open example would work applications followed saa standard greatly helped speed users could learn application caught quick became industry primary methods used interface design include prototyping simulation typical interface design consists following stages interaction specification interface software specification prototyping broad terms interfaces generally regarded user friendly efficient intuitive etc typified one particular qualities purpose example nonexhaustive list characteristics follows principle least astonishment pola general principle design kinds interfaces based idea human beings pay full attention one thing one leading conclusion novelty minimized interface used persistently user unavoidably develop habits using interface designers role thus characterized ensuring user forms good habits designer experienced interfaces similarly develop habits often make unconscious assumptions regarding user interact peter morville google designed user experience honeycomb framework leading operations user interface design framework created guide user interface design would act guideline many web development students historic hmi drivers cabin german steam locomotive modern hmi drivers cabin german intercityexpress highspeed train hmi toilette japan voice user interface wearable computer google glass hmi audio mixing hmi video production hmi machine sugar industry pushbuttons hmi computer numerical control cnc slightly newer hmi cncmachine emergency switchpanic switch dmd terminal httpsenwikipediaorgwikiuserinterface