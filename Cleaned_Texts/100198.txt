fly algorithm type cooperative coevolution based parisian fly algorithm first developed scope application evolutionary algorithms computer stereo unlike classical imagebased approach stereovision extracts image primitives matches order obtain information fly agorithm based direct exploration space scene fly defined point described coordinates x z random population flies created search space corresponding field view cameras evolution based evolutionary strategy paradigm used fitness function evaluates likely fly lying visible surface object based consistency image projections end fitness function uses grey levels colours andor textures calculated flys projections first application field fly algorithm classical image priority approaches use matching features stereo images order build model fly algorithm directly explores space uses image data evaluate validity hypotheses variant called dynamic flies defines fly x z x z involving flys velocity components explicitly taken account fitness calculation used flies positions updating subject similar genetic operators mutation crossover application flies obstacle avoidance exploits fact population flies time compliant quasicontinuously evolving representation scene directly generate vehicle control signals flies use fly algorithm strictly restricted stereo images sensors may added eg acoustic proximity sensors etc additional terms fitness function optimised odometry information also used speed updating flies positions conversely flies positions used provide localisation mapping another application field fly algorithm reconstruction emission tomography nuclear medicine fly algorithm successfully applied singlephoton emission computed positron emission fly considered photon emitter fitness based conformity simulated illumination sensors actual pattern observed sensors within application fitness function redefined use new concept marginal evaluation fitness one individual calculated positive negative contribution quality global population based leaveoneout crossvalidation principle global fitness function evaluates quality population whole fitness individual fly calculated difference global fitness values population without particular fly whose individual fitness function fitness fly considered level confidence used voxelisation process tweak flys individual footprint using implicit modelling metaballs produces smooth results accurate recently used digital art generate mosaiclike images spray examples images found youtube population individuals considered society individuals collaborate toward common goal implemented using evolutionary algorithm includes common genetic operators eg mutation crossover selection main difference fitness function two levels fitness function used addition diversity mechanism required avoid individuals gathering areas search space another difference extraction problem solution evolutionary loop terminates classical evolutionary approaches best individual corresponds solution rest population discarded individuals individuals subgroup population collated build problem solution way fitness functions constructed way solution extraction made course problemdependent examples parisian evolution applications include cooperative coevolution broad class evolutionary algorithms complex problem solved decomposing subcomponents solved independently parisian approach shares many similarities cooperative coevolutionary algorithm parisian approach makes use singlepopulation whereas multispecies may used cooperative coevolutionary algorithm similar internal evolutionary engines considered classical evolutionary algorithm cooperative coevolutionary algorithm parisian evolution difference cooperative coevolutionary algorithm parisian evolution resides populations semantics cooperative coevolutionary algorithm divides big problem subproblems groups individuals solves separately toward big interactionbreeding individuals different subpopulations individuals subpopulation however parisian evolutionary algorithms solve whole problem big component populations individuals cooperate together drive whole population toward attractive areas search space cooperative coevolution particle swarm optimisation pso share many similarities pso inspired social behaviour bird flocking fish initially introduced tool realistic animation computer graphics uses complex individuals interact order build visually realistic collective behaviours adjusting individuals behavioural rules may use random generators mathematical optimisation every particle swarm somehow follows random path biased toward best particle swarm fly algorithm flies aim building spatial representations scene actual sensor data flies communicate explicitly cooperate use behavioural model algorithms search methods start set random solutions iteratively corrected toward global optimum however solution optimisation problem fly algorithm population subset population flies implicitly collaborate build solution pso solution single particle one best fitness another main difference fly algorithm pso fly algorithm based behavioural model builds geometrical representation tomography reconstruction inverse problem often illposed due missing data andor noise answer inverse problem unique case extreme noise level may even exist input data reconstruction algorithm may given radon transform sinogram displaystyle leftyright data reconstruct f displaystyle leftfright f displaystyle f unknown displaystyle known data acquisition tomography modelled p f ϵ displaystyle ypfepsilon p displaystyle p system matrix projection operator ϵ displaystyle epsilon corresponds poisson noise case reconstruction corresponds inversion radon transform f p displaystyle note p displaystyle account noise acquisition geometry etc fly algorithm example iterative reconstruction iterative methods tomographic reconstruction relatively easy model f r g n displaystyle hat foperatorname argmin yhat f displaystyle hat f estimate f displaystyle f minimises error metrics error metrics could used displaystyle displaystyle hat note regularisation term introduced prevent overfitting smooth noise whilst preserving edges iterative methods implemented follows pseudocode stepbystep description fly algorithm tomographic reconstruction algorithm follows steadystate paradigm illustrative purposes advanced genetic operators mitosis dual mutation ignored javascript implementation found example input image approximated set tiles example ancient mosaic tile orientation angle θ three colour components r g b size w h position x z n tiles unknown floating point numbers guess words tiles numbers find using classical evolutionary algorithm answer optimisation problem best individual genome individual would made genes approach would extremely costly term complexity computing time applies classical optimisation algorithm using fly algorithm every individual mimics tile individually evaluated using local fitness assess contribution populations performance global fitness individual genes instead n individuals solved reconstruction problem follows r e c n r u c n r g n x x w h n p u x p f x displaystyle reconstructionoperatorname argmin overset xwunderset overset yhunderset inputxypfxy n p u displaystyle input input image x displaystyle x displaystyle pixel coordinates along horizontal vertical axis respectively w displaystyle w h displaystyle h image width height number pixels respectively f displaystyle f fly population p displaystyle p projection operator creates image flies projection operator p displaystyle p take many forms work z ali aboodd uses opengl generate different effects eg mosaics spray paint speeding evaluation fitness functions opencl used algorithm starts population f displaystyle f randomly generated see line algorithm f displaystyle f assessed using global fitness compute g f n e f x x w h n p u x p f x displaystyle gfitnessfoverset xwunderset overset yhunderset inputxypfxy see line g f n e displaystyle gfitness objective function minimized httpsenwikipediaorgwikiflyalgorithm