parallel metaheuristic class techniques capable reducing numerical effortclarification needed run time metaheuristic end concepts technologies field parallelism computer science used enhance even completely modify behavior existing metaheuristics exists long list metaheuristics like evolutionary algorithms particle swarm ant colony optimization simulated annealing etc also exists large set different techniques strongly loosely based ones whose behavior encompasses multiple parallel execution algorithm components cooperate way solve problem given parallel hardware platform practice optimization searching learning problems often nphard complex timeconsuming two major approaches traditionally used tackle problems exact methods metaheuristicsdisputed discuss exact methods allow find exact solutions often impractical extremely timeconsuming realworld problems large dimension hardly constrained multimodal timevarying epistatic problems conversely metaheuristics provide suboptimal sometimes optimal solutions reasonable time thus metaheuristics usually allow meet resolution delays imposed industrial field well allow study general problem classes instead particular problem instances general many best performing techniques precision effort solve complex realworld problems metaheuristics fields application range combinatorial optimization bioinformatics telecommunications economics software engineering etc fields full many tasks needing fast solutions high quality see details complex applications metaheuristics fall two categories trajectorybased metaheuristics populationbased metaheuristics main difference two kind methods relies number tentative solutions used step iterative algorithm trajectorybased technique starts single initial solution step search current solution replaced another often best solution found neighborhood usual trajectorybased metaheuristics allow quickly find locally optimal solution called exploitationoriented methods promoting intensification search space hand populationbased algorithms make use population solutions initial population case randomly generated created greedy algorithm enhanced iterative process generation process whole population part replaced newly generated individuals often best ones techniques called explorationoriented methods since main ability resides diversification search space basic metaheuristics sequential although utilization allows significantly reduce temporal complexity search process latter remains high realworld problems arising academic industrial domains therefore parallelism comes natural way reduce search time also improve quality provided solutions comprehensive discussion parallelism mixed metaheuristics see metaheuristics solving optimization problems could viewed walks neighborhoods tracing search trajectories solution domains problem hands walks performed iterative procedures allow moving one solution another one solution space see algorithm kind metaheuristics perform moves neighborhood current solution ie perturbative nature walks start solution randomly generated obtained another optimization algorithm iteration current solution replaced another one selected set neighboring candidates search process stopped given condition satisfied maximum number generation find solution target quality stuck given time powerful way achieve high computational efficiency trajectorybased methods use parallelism different parallel models proposed trajectorybased metaheuristics three commonly used literature parallel multistart model parallel exploration evaluation neighborhood parallel moves model parallel evaluation single solution move acceleration model populationbased metaheuristic stochastic search techniques successfully applied many real complex applications epistatic multimodal multiobjective highly constrained problems populationbased algorithm iterative technique applies stochastic operators pool individuals population see algorithm every individual population encoded version tentative solution evaluation function associates fitness value every individual indicating suitability problem iteratively probabilistic application variation operators selected individuals guides population tentative solutions higher quality wellknown metaheuristic families based manipulation population solutions evolutionary algorithms eas ant colony optimization aco particle swarm optimization pso scatter search ss differential evolution de estimation distribution algorithms eda nontrivial problems executing reproductive cycle simple populationbased method long individuals andor large populations usually requires high computational resources general evaluating fitness function every individual frequently costly operation algorithm consequently variety algorithmic issues studied design efficient techniques issues usually consist defining new operators hybrid algorithms parallel models parallelism arises naturally dealing populations since individuals belonging independent unit least according pittsburg style although approaches like michigan one consider individual independent units indeed performance populationbased algorithms often improved running parallel two parallelizing strategies specially focused populationbased algorithms beginning parallelization history algorithms wellknown masterslave also known global parallelization farming method used approach central processor performs selection operations associated slave processors workers run variation operator evaluation fitness function algorithm behavior sequential one although computational efficiency improved especially timeconsuming objective functions hand many researchers use pool processors speed execution sequential algorithm independent runs made rapidly using several processors using single one case interaction exists independent runs however actually parallel populationbased techniques found literature utilize kind spatial disposition individuals parallelize resulting chunks pool processors among widely known types structured metaheuristics distributed coarse grain cellular fine grain algorithms popular optimization procedures case distributed ones population partitioned set subpopulations islands isolated serial algorithms executed sparse exchanges individuals performed among islands goal introducing diversity subpopulations thus preventing search getting stuck local optima order design distributed metaheuristic wewho must take several decisions among chief decision determine migration policy topology logical links islands migration rate number individuals undergo migration every exchange migration frequency number steps every subpopulation two successive exchanges selectionreplacement migrants case cellular method concept neighborhood introduced individual may interact nearby neighbors breeding loop overlapped small neighborhood algorithm helps exploring search space slow diffusion solutions population provides kind exploration exploitation takes place inside neighborhood see information cellular genetic algorithms related models also hybrid models proposed twolevel approach parallelization undertaken general higher level parallelization coarsegrained implementation basic island performs cellular masterslave method even another distributed one httpsenwikipediaorgwikiparallelmetaheuristic