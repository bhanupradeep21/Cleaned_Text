learning classifier systems lcs paradigm rulebased machine learning methods combine discovery component eg typically genetic algorithm learning component performing either supervised learning reinforcement learning unsupervised learning classifier systems seek identify set contextdependent rules collectively store apply knowledge piecewise manner order make predictions eg behavior data function game strategy approach allows complex solution spaces broken smaller simpler parts founding concepts behind learning classifier systems came attempts model complex adaptive systems using rulebased agents form artificial cognitive system ie artificial intelligence architecture components given learning classifier system quite variable useful think lcs machine consisting several interacting components components may added removed existing components modifiedexchanged suit demands given problem domain like algorithmic building blocks make algorithm flexible enough function many different problem domains result lcs paradigm flexibly applied many problem domains call machine learning major divisions among lcs implementations follows michiganstyle architecture vs pittsburghstyle reinforcement learning vs supervised learning incremental learning vs batch learning online learning vs offline learning strengthbased fitness vs accuracybased fitness complete action mapping vs best action mapping divisions necessarily mutually exclusive example best known best studied lcs algorithm michiganstyle designed reinforcement learning also perform supervised learning applies incremental learning either online offline applies accuracybased fitness seeks generate complete action mapping keeping mind lcs paradigm geneticbased machine learning rather specific method following outlines key elements generic modern ie postxcs lcs algorithm simplicity let us focus michiganstyle architecture supervised learning see illustrations right laying sequential steps involved type generic lcs environment source data upon lcs learns offline finite training dataset characteristic data mining classification regression problem online sequential stream live training instances training instance assumed include number features also referred attributes independent variables single endpoint interest also referred class action phenotype prediction dependent variable part lcs learning involve feature selection therefore features training data need informative set feature values instance commonly referred state simplicity lets assume example problem domain booleanbinary features booleanbinary class michiganstyle systems one instance environment trained learning cycle ie incremental learning pittsburghstyle systems perform batch learning rule sets evaluated iteration much training data rule context dependent relationship state values prediction rules typically take form ifthen expression eg condition action specific example red octagon stopsign critical concept lcs rulebased machine learning alike individual rule model since rule applicable condition satisfied think rule localmodel solution space rules represented many different ways handle different data types eg binary discretevalued ordinal continuousvalued given binary data lcs traditionally applies ternary rule representation ie rules include either feature data dont care symbol ie serves wild card within rules condition allowing rules system whole generalize relationships features target endpoint predicted consider following rule ie condition action rule interpreted second feature sixth feature class prediction would say second sixth features specified rule others generalized rule corresponding prediction applicable instance condition rule satisfied instance commonly referred matching michiganstyle lcs rule fitness well number ruleparameters associated describe number copies rule exist ie numerosity age rule accuracy accuracy reward predictions descriptive experiential statistics rule along parameters often referred classifier michiganstyle systems classifiers contained within population p user defined maximum number classifiers unlike stochastic search algorithms eg evolutionary algorithms lcs populations start empty ie need randomly initialize rule population classifiers instead initially introduced population covering mechanism lcs trained model set rulesclassifiers rather single ruleclassifier michiganstyle lcs entire trained optionally compacted classifier population forms prediction model one critical often timeconsuming elements lcs matching process first step lcs learning cycle takes single training instance environment passes p matching takes place step two every rule p compared training instance see rules match ie contextually relevant current instance step three matching rules moved match set rule matches training instance feature values specified rule condition equivalent corresponding feature value training instance example assuming training instance rules would match rules would notice matching endpointaction specified rule taken consideration result match set may contain classifiers propose conflicting actions fourth step since performing supervised learning divided correct set c incorrect set matching rule goes correct set proposes correct action based known action training instance otherwise goes reinforcement learning lcs action set would formed instead since correct action known point learning cycle classifiers made either c would case population starts empty covering mechanism applied fifth step covering form online smart population initialization covering randomly generates rule matches current training instance case supervised learning rule also generated correct action assuming training instance covering might generate following rules covering ensures learning cycle least one correct matching rule c rule initialized population match least one training instance prevents lcs exploring search space rules match training instances sixth step rule parameters rule updated reflect new experience gained current training instance depending lcs algorithm number updates take place step supervised learning simply update accuracyerror rule rule accuracyerror different model accuracyerror since calculated entire training data instances matched rule accuracy calculated dividing number times rule correct set c number times match set rule accuracy thought local accuracy rule fitness also updated commonly calculated function rule accuracy concept fitness taken directly classic genetic algorithms aware many variations lcs updates parameters order perform credit assignment learning seventh step subsumption mechanism typically applied subsumption explicit generalization mechanism merges classifiers cover redundant parts problem space subsuming classifier effectively absorbs subsumed classifier numerosity increased happen subsuming classifier general accurate covers problem space classifier subsumes eighth step lcs adopts highly elitist genetic algorithm ga select two parent classifiers based fitness survival fittest parents selected c typically using tournament selection systems applied roulette wheel selection deterministic selection differently selected parent rules either p panmictic selection crossover mutation operators applied generate two new offspring rules point parent offspring rules returned p lcs genetic algorithm highly elitist since learning iteration vast majority population preserved rule discovery may alternatively performed method estimation distribution algorithm ga far common approach evolutionary algorithms like ga employ stochastic search makes lcs stochastic algorithm lcs seeks cleverly explore search space perform exhaustive search rule combinations guaranteed converge optimal solution last step generic lcs learning cycle maintain maximum population size deletion mechanism select classifiers deletion commonly using roulette wheel selection probability classifier selected deletion inversely proportional fitness classifier selected deletion numerosity parameter reduced one numerosity classifier reduced zero removed entirely population lcs cycle steps repeatedly user defined number training iterations user defined termination criteria met online learning lcs obtain completely new training instance iteration environment offline learning lcs iterate finite training dataset reaches last instance dataset go back first instance cycle dataset training complete rule population inevitably contain poor redundant inexperienced rules common apply rule compaction condensation heuristic postprocessing step resulting compacted rule population ready applied prediction model eg make predictions testing instances andor interpreted knowledge discovery whether rule compaction applied output lcs algorithm population classifiers applied making predictions previously unseen instances prediction mechanism part supervised lcs learning cycle however would play important role reinforcement learning lcs learning cycle consider prediction mechanism applied making predictions test data making predictions lcs learning components deactivated population continue learn incoming testing data test instance passed p match set formed usual point match set differently passed prediction array rules match set predict different actions therefore voting scheme applied simple voting scheme action strongest supporting votes matching rules wins becomes selected prediction rules get equal vote rather strength vote single rule commonly proportional numerosity fitness voting scheme nature lcss store knowledge suggests lcs algorithms implicitly ensemble learners individual lcs rules typically human readable ifthen expression rules constitute lcs prediction model ranked different rule parameters manually inspected global strategies guide knowledge discovery using statistical graphical also respect advanced machine learning approaches artificial neural networks random forests genetic programming learning classifier systems particularly well suited problems require interpretable solutions john henry holland best known work popularizing genetic algorithms ga groundbreaking book adaptation natural artificial formalization hollands schema theorem holland conceptualized extension ga concept called cognitive provided first detailed description would become known first learning classifier system paper cognitive systems based adaptive first system named cognitive system one conceived modeling tool designed model real system ie environment unknown underlying dynamics using population human readable rules goal set rules perform online machine learning adapt environment based infrequent payoffreward ie reinforcement learning apply rules generate behavior matched real system early ambitious implementation later regarded overly complex yielding inconsistent beginning kenneth de jong student stephen smith took different approach rulebased machine learning learning viewed offline optimization process rather online adaptation new approach similar standard genetic algorithm evolved independent sets rules since time lcs methods inspired online learning framework introduced holland university michigan referred michiganstyle lcs inspired smith de jong university pittsburgh referred pittsburghstyle holland developed would considered standard michiganstyle lcs next important concepts emerged early days lcs research included formalization bucket brigade algorithm bba credit selection parent rules common environmental niche ie match set rather whole population covering first introduced create formalization action set simplified algorithm strengthbased consideration singlestep supervised learning introduction correct set accuracybased combination fuzzy logic later spawned lineage fuzzy lcs algorithms encouraging long action chains default hierarchies improving performance multistep examining latent learning later inspired new branch anticipatory classifier systems introduction first qlearninglike credit assignment concepts applied modern lcs algorithms landmarks development lcs paradigm interest learning classifier systems reinvigorated mid largely due two events development qlearning reinforcement learning introduction significantly simplified michiganstyle lcs architectures stewart wilsons zerothlevel classifier system focused increasing algorithmic understandability based hollands standard lcs done part removing rulebidding internal message list essential original bba credit assignment replacing hybrid bbaqlearning strategy zcs demonstrated much simpler lcs architecture could perform well original complex implementations however zcs still suffered performance drawbacks including proliferation overgeneral classifiers wilson published landmark paper classifier fitness based accuracy introduced classifier system xcs took simplified architecture zcs added accuracybased fitness niche ga acting action set explicit generalization mechanism called subsumption adaptation qlearning credit assignment xcs popularized ability reach optimal performance evolving accurate maximally general classifiers well impressive problem flexibility able perform reinforcement learning supervised learning xcs later became best known studied lcs algorithm defined new family accuracybased lcs zcs alternatively became synonymous strengthbased lcs xcs also important successfully bridged gap lcs field reinforcement learning following success xcs lcs later described reinforcement learning systems endowed generalization reinforcement learning typically seeks learn value function maps complete representation stateaction space similarly design xcs drives form allinclusive accurate representation problem space ie complete map rather focusing high payoff niches environment case strengthbased lcs conceptually complete maps dont capture correct also shouldnt whats incorrect differently strengthbased lcss exclusively supervised learning lcss seek rule set efficient generalizations form best action map partial map comparisons strength vs accuracybased fitness complete vs best action maps since examined greater xcs inspired development whole new generation lcs algorithms applications congdon first apply lcs realworld epidemiological investigations disease followed closely holmes developed later epidemiological classification early works inspired later interest applying lcs algorithms complex largescale data mining tasks epitomized bioinformatics applications stolzmann introduced anticipatory classifier systems acs included rules form conditionactioneffect rather classic conditionaction acs designed predict perceptual consequences action possible situations environment words system evolves model specifies given situation also provides information happen specific action executed family lcs algorithms best suited multistep problems planning speeding learning disambiguating perceptual aliasing ie observation obtained distinct states requires different actions butz later pursued anticipatory family lcs developing number improvements original wilson introduced xcsf adding computed action order perform function bernadomansilla introduced supervised classifier system ucs specialized xcs algorithm task supervised learning singlestep problems forming best action set ucs removed reinforcement learning strategy favor simple accuracybased rule fitness well exploreexploit learning phases characteristic many reinforcement learners bull introduced simple accuracybased lcs simple strengthbased lcs minimal classifier system order develop better theoretical understanding lcs framework bacardit introduced pittsburghstyle lcss designed data mining scalability large datasets bioinformatics applications drugowitsch published book titled design analysis learning classifier systems including theoretical examination lcs butz introduced first rule online learning visualization within gui see image top page urbanowicz extended ucs framework introduced exstracs explicitly designed supervised learning noisy problem domains eg epidemiology exstracs integrated expert knowledge drive covering genetic algorithm towards important features form longterm memory referred attribute allowing efficient learning characterization heterogeneous data patterns flexible rule representation similar bacardits mixed discretecontinuous attribute list bacardit urbanowicz explored statistical visualization strategies interpret lcs rules perform knowledge discovery data browne iqbal explored concept reusing building blocks form code fragments first solve multiplexer benchmark problem first learning useful building blocks simpler multiplexer exstracs later introduced improve michiganstyle lcs scalability successfully solving multiplexer benchmark problem first time nbit multiplexer problem highly epistatic heterogeneous making challenging machine learning task michiganstyle lcss characterized population rules genetic algorithm operates level individual rules solution represented entire rule population michigan style systems also learn incrementally allows perform reinforcement learning supervised learning well online offline learning michiganstyle systems advantage applicable greater number problem domains unique benefits incremental learning pittsburghstyle lcss characterized population variable length rulesets ruleset potential solution genetic algorithm typically operates level entire ruleset pittsburghstyle systems also uniquely evolve ordered rule lists well employ default rule systems natural advantage identifying smaller rule sets making systems interpretable regards manual rule inspection systems seek combine key strengths systems also proposed name learning classifier system lcs bit misleading since many machine learning algorithms learn classify eg decision trees artificial neural networks lcss term rulebased machine learning rbml useful clearly captures essential rulebased component systems also generalizes methods considered lcss eg association rule learning artificial immune systems general terms geneticsbased machine learning even genetic also applied refer would characteristically defined learning classifier system due similarity genetic algorithms pittsburghstyle learning classifier systems sometimes generically referred genetic algorithms beyond lcs algorithms closely related methods referred cognitive adaptive agents production systems generically classifier variation terminology contributes confusion field nearly learning classifier system methods developed reinforcement learning problems mind result term learning classifier system commonly defined combination trialanderror reinforcement learning global search genetic algorithm interest supervised learning applications even unsupervised learning since broadened use definition term httpsenwikipediaorgwikilearningclassifiersystem